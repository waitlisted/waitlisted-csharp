/* 
 * Waitlisted API
 *
 * Waitlisted API
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// SiteResponse
    /// </summary>
    [DataContract]
    public partial class SiteResponse :  IEquatable<SiteResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SiteResponse" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="BrandColor">BrandColor.</param>
        /// <param name="ButtonTextColor">ButtonTextColor.</param>
        /// <param name="CustomStyles">CustomStyles.</param>
        /// <param name="AskName">AskName.</param>
        /// <param name="SignupTitle">SignupTitle.</param>
        /// <param name="SignupCopy">SignupCopy.</param>
        /// <param name="PositionTitle">PositionTitle.</param>
        /// <param name="SocialCopy">SocialCopy.</param>
        /// <param name="SocialMessage">SocialMessage.</param>
        /// <param name="Domain">Domain.</param>
        /// <param name="ShareSocialCopy">ShareSocialCopy.</param>
        /// <param name="ReferralCopy">ReferralCopy.</param>
        /// <param name="CheckPositionCopy">CheckPositionCopy.</param>
        /// <param name="JoinButtonCopy">JoinButtonCopy.</param>
        /// <param name="CheckReservationCopy">CheckReservationCopy.</param>
        /// <param name="EmailFieldLabel">EmailFieldLabel.</param>
        /// <param name="NameFieldLabel">NameFieldLabel.</param>
        /// <param name="ThankYouShareTemplate">ThankYouShareTemplate.</param>
        /// <param name="WaitlistThreshold">WaitlistThreshold.</param>
        /// <param name="UseCustomThankYou">UseCustomThankYou.</param>
        /// <param name="HideWaitlist">HideWaitlist.</param>
        /// <param name="UnmetSharedTemplate">UnmetSharedTemplate.</param>
        /// <param name="ThresholdMet">ThresholdMet.</param>
        /// <param name="WebsiteUrl">WebsiteUrl.</param>
        /// <param name="TrackingCode">TrackingCode.</param>
        /// <param name="CustomCss">CustomCss.</param>
        /// <param name="HideBranding">HideBranding.</param>
        /// <param name="TotalCount">TotalCount.</param>
        public SiteResponse(string Id = null, string BrandColor = null, string ButtonTextColor = null, string CustomStyles = null, bool? AskName = null, string SignupTitle = null, string SignupCopy = null, string PositionTitle = null, string SocialCopy = null, string SocialMessage = null, string Domain = null, string ShareSocialCopy = null, string ReferralCopy = null, string CheckPositionCopy = null, string JoinButtonCopy = null, string CheckReservationCopy = null, string EmailFieldLabel = null, string NameFieldLabel = null, string ThankYouShareTemplate = null, int? WaitlistThreshold = null, bool? UseCustomThankYou = null, bool? HideWaitlist = null, string UnmetSharedTemplate = null, bool? ThresholdMet = null, string WebsiteUrl = null, string TrackingCode = null, string CustomCss = null, bool? HideBranding = null, int? TotalCount = null)
        {
            this.Id = Id;
            this.BrandColor = BrandColor;
            this.ButtonTextColor = ButtonTextColor;
            this.CustomStyles = CustomStyles;
            this.AskName = AskName;
            this.SignupTitle = SignupTitle;
            this.SignupCopy = SignupCopy;
            this.PositionTitle = PositionTitle;
            this.SocialCopy = SocialCopy;
            this.SocialMessage = SocialMessage;
            this.Domain = Domain;
            this.ShareSocialCopy = ShareSocialCopy;
            this.ReferralCopy = ReferralCopy;
            this.CheckPositionCopy = CheckPositionCopy;
            this.JoinButtonCopy = JoinButtonCopy;
            this.CheckReservationCopy = CheckReservationCopy;
            this.EmailFieldLabel = EmailFieldLabel;
            this.NameFieldLabel = NameFieldLabel;
            this.ThankYouShareTemplate = ThankYouShareTemplate;
            this.WaitlistThreshold = WaitlistThreshold;
            this.UseCustomThankYou = UseCustomThankYou;
            this.HideWaitlist = HideWaitlist;
            this.UnmetSharedTemplate = UnmetSharedTemplate;
            this.ThresholdMet = ThresholdMet;
            this.WebsiteUrl = WebsiteUrl;
            this.TrackingCode = TrackingCode;
            this.CustomCss = CustomCss;
            this.HideBranding = HideBranding;
            this.TotalCount = TotalCount;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }
        /// <summary>
        /// Gets or Sets BrandColor
        /// </summary>
        [DataMember(Name="brand_color", EmitDefaultValue=false)]
        public string BrandColor { get; set; }
        /// <summary>
        /// Gets or Sets ButtonTextColor
        /// </summary>
        [DataMember(Name="button_text_color", EmitDefaultValue=false)]
        public string ButtonTextColor { get; set; }
        /// <summary>
        /// Gets or Sets CustomStyles
        /// </summary>
        [DataMember(Name="custom_styles", EmitDefaultValue=false)]
        public string CustomStyles { get; set; }
        /// <summary>
        /// Gets or Sets AskName
        /// </summary>
        [DataMember(Name="ask_name", EmitDefaultValue=false)]
        public bool? AskName { get; set; }
        /// <summary>
        /// Gets or Sets SignupTitle
        /// </summary>
        [DataMember(Name="signup_title", EmitDefaultValue=false)]
        public string SignupTitle { get; set; }
        /// <summary>
        /// Gets or Sets SignupCopy
        /// </summary>
        [DataMember(Name="signup_copy", EmitDefaultValue=false)]
        public string SignupCopy { get; set; }
        /// <summary>
        /// Gets or Sets PositionTitle
        /// </summary>
        [DataMember(Name="position_title", EmitDefaultValue=false)]
        public string PositionTitle { get; set; }
        /// <summary>
        /// Gets or Sets SocialCopy
        /// </summary>
        [DataMember(Name="social_copy", EmitDefaultValue=false)]
        public string SocialCopy { get; set; }
        /// <summary>
        /// Gets or Sets SocialMessage
        /// </summary>
        [DataMember(Name="social_message", EmitDefaultValue=false)]
        public string SocialMessage { get; set; }
        /// <summary>
        /// Gets or Sets Domain
        /// </summary>
        [DataMember(Name="domain", EmitDefaultValue=false)]
        public string Domain { get; set; }
        /// <summary>
        /// Gets or Sets ShareSocialCopy
        /// </summary>
        [DataMember(Name="share_social_copy", EmitDefaultValue=false)]
        public string ShareSocialCopy { get; set; }
        /// <summary>
        /// Gets or Sets ReferralCopy
        /// </summary>
        [DataMember(Name="referral_copy", EmitDefaultValue=false)]
        public string ReferralCopy { get; set; }
        /// <summary>
        /// Gets or Sets CheckPositionCopy
        /// </summary>
        [DataMember(Name="check_position_copy", EmitDefaultValue=false)]
        public string CheckPositionCopy { get; set; }
        /// <summary>
        /// Gets or Sets JoinButtonCopy
        /// </summary>
        [DataMember(Name="join_button_copy", EmitDefaultValue=false)]
        public string JoinButtonCopy { get; set; }
        /// <summary>
        /// Gets or Sets CheckReservationCopy
        /// </summary>
        [DataMember(Name="check_reservation_copy", EmitDefaultValue=false)]
        public string CheckReservationCopy { get; set; }
        /// <summary>
        /// Gets or Sets EmailFieldLabel
        /// </summary>
        [DataMember(Name="email_field_label", EmitDefaultValue=false)]
        public string EmailFieldLabel { get; set; }
        /// <summary>
        /// Gets or Sets NameFieldLabel
        /// </summary>
        [DataMember(Name="name_field_label", EmitDefaultValue=false)]
        public string NameFieldLabel { get; set; }
        /// <summary>
        /// Gets or Sets ThankYouShareTemplate
        /// </summary>
        [DataMember(Name="thank_you_share_template", EmitDefaultValue=false)]
        public string ThankYouShareTemplate { get; set; }
        /// <summary>
        /// Gets or Sets WaitlistThreshold
        /// </summary>
        [DataMember(Name="waitlist_threshold", EmitDefaultValue=false)]
        public int? WaitlistThreshold { get; set; }
        /// <summary>
        /// Gets or Sets UseCustomThankYou
        /// </summary>
        [DataMember(Name="use_custom_thank_you", EmitDefaultValue=false)]
        public bool? UseCustomThankYou { get; set; }
        /// <summary>
        /// Gets or Sets HideWaitlist
        /// </summary>
        [DataMember(Name="hide_waitlist", EmitDefaultValue=false)]
        public bool? HideWaitlist { get; set; }
        /// <summary>
        /// Gets or Sets UnmetSharedTemplate
        /// </summary>
        [DataMember(Name="unmet_shared_template", EmitDefaultValue=false)]
        public string UnmetSharedTemplate { get; set; }
        /// <summary>
        /// Gets or Sets ThresholdMet
        /// </summary>
        [DataMember(Name="threshold_met", EmitDefaultValue=false)]
        public bool? ThresholdMet { get; set; }
        /// <summary>
        /// Gets or Sets WebsiteUrl
        /// </summary>
        [DataMember(Name="website_url", EmitDefaultValue=false)]
        public string WebsiteUrl { get; set; }
        /// <summary>
        /// Gets or Sets TrackingCode
        /// </summary>
        [DataMember(Name="tracking_code", EmitDefaultValue=false)]
        public string TrackingCode { get; set; }
        /// <summary>
        /// Gets or Sets CustomCss
        /// </summary>
        [DataMember(Name="custom_css", EmitDefaultValue=false)]
        public string CustomCss { get; set; }
        /// <summary>
        /// Gets or Sets HideBranding
        /// </summary>
        [DataMember(Name="hide_branding", EmitDefaultValue=false)]
        public bool? HideBranding { get; set; }
        /// <summary>
        /// Gets or Sets TotalCount
        /// </summary>
        [DataMember(Name="total_count", EmitDefaultValue=false)]
        public int? TotalCount { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SiteResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  BrandColor: ").Append(BrandColor).Append("\n");
            sb.Append("  ButtonTextColor: ").Append(ButtonTextColor).Append("\n");
            sb.Append("  CustomStyles: ").Append(CustomStyles).Append("\n");
            sb.Append("  AskName: ").Append(AskName).Append("\n");
            sb.Append("  SignupTitle: ").Append(SignupTitle).Append("\n");
            sb.Append("  SignupCopy: ").Append(SignupCopy).Append("\n");
            sb.Append("  PositionTitle: ").Append(PositionTitle).Append("\n");
            sb.Append("  SocialCopy: ").Append(SocialCopy).Append("\n");
            sb.Append("  SocialMessage: ").Append(SocialMessage).Append("\n");
            sb.Append("  Domain: ").Append(Domain).Append("\n");
            sb.Append("  ShareSocialCopy: ").Append(ShareSocialCopy).Append("\n");
            sb.Append("  ReferralCopy: ").Append(ReferralCopy).Append("\n");
            sb.Append("  CheckPositionCopy: ").Append(CheckPositionCopy).Append("\n");
            sb.Append("  JoinButtonCopy: ").Append(JoinButtonCopy).Append("\n");
            sb.Append("  CheckReservationCopy: ").Append(CheckReservationCopy).Append("\n");
            sb.Append("  EmailFieldLabel: ").Append(EmailFieldLabel).Append("\n");
            sb.Append("  NameFieldLabel: ").Append(NameFieldLabel).Append("\n");
            sb.Append("  ThankYouShareTemplate: ").Append(ThankYouShareTemplate).Append("\n");
            sb.Append("  WaitlistThreshold: ").Append(WaitlistThreshold).Append("\n");
            sb.Append("  UseCustomThankYou: ").Append(UseCustomThankYou).Append("\n");
            sb.Append("  HideWaitlist: ").Append(HideWaitlist).Append("\n");
            sb.Append("  UnmetSharedTemplate: ").Append(UnmetSharedTemplate).Append("\n");
            sb.Append("  ThresholdMet: ").Append(ThresholdMet).Append("\n");
            sb.Append("  WebsiteUrl: ").Append(WebsiteUrl).Append("\n");
            sb.Append("  TrackingCode: ").Append(TrackingCode).Append("\n");
            sb.Append("  CustomCss: ").Append(CustomCss).Append("\n");
            sb.Append("  HideBranding: ").Append(HideBranding).Append("\n");
            sb.Append("  TotalCount: ").Append(TotalCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as SiteResponse);
        }

        /// <summary>
        /// Returns true if SiteResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of SiteResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SiteResponse other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.BrandColor == other.BrandColor ||
                    this.BrandColor != null &&
                    this.BrandColor.Equals(other.BrandColor)
                ) && 
                (
                    this.ButtonTextColor == other.ButtonTextColor ||
                    this.ButtonTextColor != null &&
                    this.ButtonTextColor.Equals(other.ButtonTextColor)
                ) && 
                (
                    this.CustomStyles == other.CustomStyles ||
                    this.CustomStyles != null &&
                    this.CustomStyles.Equals(other.CustomStyles)
                ) && 
                (
                    this.AskName == other.AskName ||
                    this.AskName != null &&
                    this.AskName.Equals(other.AskName)
                ) && 
                (
                    this.SignupTitle == other.SignupTitle ||
                    this.SignupTitle != null &&
                    this.SignupTitle.Equals(other.SignupTitle)
                ) && 
                (
                    this.SignupCopy == other.SignupCopy ||
                    this.SignupCopy != null &&
                    this.SignupCopy.Equals(other.SignupCopy)
                ) && 
                (
                    this.PositionTitle == other.PositionTitle ||
                    this.PositionTitle != null &&
                    this.PositionTitle.Equals(other.PositionTitle)
                ) && 
                (
                    this.SocialCopy == other.SocialCopy ||
                    this.SocialCopy != null &&
                    this.SocialCopy.Equals(other.SocialCopy)
                ) && 
                (
                    this.SocialMessage == other.SocialMessage ||
                    this.SocialMessage != null &&
                    this.SocialMessage.Equals(other.SocialMessage)
                ) && 
                (
                    this.Domain == other.Domain ||
                    this.Domain != null &&
                    this.Domain.Equals(other.Domain)
                ) && 
                (
                    this.ShareSocialCopy == other.ShareSocialCopy ||
                    this.ShareSocialCopy != null &&
                    this.ShareSocialCopy.Equals(other.ShareSocialCopy)
                ) && 
                (
                    this.ReferralCopy == other.ReferralCopy ||
                    this.ReferralCopy != null &&
                    this.ReferralCopy.Equals(other.ReferralCopy)
                ) && 
                (
                    this.CheckPositionCopy == other.CheckPositionCopy ||
                    this.CheckPositionCopy != null &&
                    this.CheckPositionCopy.Equals(other.CheckPositionCopy)
                ) && 
                (
                    this.JoinButtonCopy == other.JoinButtonCopy ||
                    this.JoinButtonCopy != null &&
                    this.JoinButtonCopy.Equals(other.JoinButtonCopy)
                ) && 
                (
                    this.CheckReservationCopy == other.CheckReservationCopy ||
                    this.CheckReservationCopy != null &&
                    this.CheckReservationCopy.Equals(other.CheckReservationCopy)
                ) && 
                (
                    this.EmailFieldLabel == other.EmailFieldLabel ||
                    this.EmailFieldLabel != null &&
                    this.EmailFieldLabel.Equals(other.EmailFieldLabel)
                ) && 
                (
                    this.NameFieldLabel == other.NameFieldLabel ||
                    this.NameFieldLabel != null &&
                    this.NameFieldLabel.Equals(other.NameFieldLabel)
                ) && 
                (
                    this.ThankYouShareTemplate == other.ThankYouShareTemplate ||
                    this.ThankYouShareTemplate != null &&
                    this.ThankYouShareTemplate.Equals(other.ThankYouShareTemplate)
                ) && 
                (
                    this.WaitlistThreshold == other.WaitlistThreshold ||
                    this.WaitlistThreshold != null &&
                    this.WaitlistThreshold.Equals(other.WaitlistThreshold)
                ) && 
                (
                    this.UseCustomThankYou == other.UseCustomThankYou ||
                    this.UseCustomThankYou != null &&
                    this.UseCustomThankYou.Equals(other.UseCustomThankYou)
                ) && 
                (
                    this.HideWaitlist == other.HideWaitlist ||
                    this.HideWaitlist != null &&
                    this.HideWaitlist.Equals(other.HideWaitlist)
                ) && 
                (
                    this.UnmetSharedTemplate == other.UnmetSharedTemplate ||
                    this.UnmetSharedTemplate != null &&
                    this.UnmetSharedTemplate.Equals(other.UnmetSharedTemplate)
                ) && 
                (
                    this.ThresholdMet == other.ThresholdMet ||
                    this.ThresholdMet != null &&
                    this.ThresholdMet.Equals(other.ThresholdMet)
                ) && 
                (
                    this.WebsiteUrl == other.WebsiteUrl ||
                    this.WebsiteUrl != null &&
                    this.WebsiteUrl.Equals(other.WebsiteUrl)
                ) && 
                (
                    this.TrackingCode == other.TrackingCode ||
                    this.TrackingCode != null &&
                    this.TrackingCode.Equals(other.TrackingCode)
                ) && 
                (
                    this.CustomCss == other.CustomCss ||
                    this.CustomCss != null &&
                    this.CustomCss.Equals(other.CustomCss)
                ) && 
                (
                    this.HideBranding == other.HideBranding ||
                    this.HideBranding != null &&
                    this.HideBranding.Equals(other.HideBranding)
                ) && 
                (
                    this.TotalCount == other.TotalCount ||
                    this.TotalCount != null &&
                    this.TotalCount.Equals(other.TotalCount)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.BrandColor != null)
                    hash = hash * 59 + this.BrandColor.GetHashCode();
                if (this.ButtonTextColor != null)
                    hash = hash * 59 + this.ButtonTextColor.GetHashCode();
                if (this.CustomStyles != null)
                    hash = hash * 59 + this.CustomStyles.GetHashCode();
                if (this.AskName != null)
                    hash = hash * 59 + this.AskName.GetHashCode();
                if (this.SignupTitle != null)
                    hash = hash * 59 + this.SignupTitle.GetHashCode();
                if (this.SignupCopy != null)
                    hash = hash * 59 + this.SignupCopy.GetHashCode();
                if (this.PositionTitle != null)
                    hash = hash * 59 + this.PositionTitle.GetHashCode();
                if (this.SocialCopy != null)
                    hash = hash * 59 + this.SocialCopy.GetHashCode();
                if (this.SocialMessage != null)
                    hash = hash * 59 + this.SocialMessage.GetHashCode();
                if (this.Domain != null)
                    hash = hash * 59 + this.Domain.GetHashCode();
                if (this.ShareSocialCopy != null)
                    hash = hash * 59 + this.ShareSocialCopy.GetHashCode();
                if (this.ReferralCopy != null)
                    hash = hash * 59 + this.ReferralCopy.GetHashCode();
                if (this.CheckPositionCopy != null)
                    hash = hash * 59 + this.CheckPositionCopy.GetHashCode();
                if (this.JoinButtonCopy != null)
                    hash = hash * 59 + this.JoinButtonCopy.GetHashCode();
                if (this.CheckReservationCopy != null)
                    hash = hash * 59 + this.CheckReservationCopy.GetHashCode();
                if (this.EmailFieldLabel != null)
                    hash = hash * 59 + this.EmailFieldLabel.GetHashCode();
                if (this.NameFieldLabel != null)
                    hash = hash * 59 + this.NameFieldLabel.GetHashCode();
                if (this.ThankYouShareTemplate != null)
                    hash = hash * 59 + this.ThankYouShareTemplate.GetHashCode();
                if (this.WaitlistThreshold != null)
                    hash = hash * 59 + this.WaitlistThreshold.GetHashCode();
                if (this.UseCustomThankYou != null)
                    hash = hash * 59 + this.UseCustomThankYou.GetHashCode();
                if (this.HideWaitlist != null)
                    hash = hash * 59 + this.HideWaitlist.GetHashCode();
                if (this.UnmetSharedTemplate != null)
                    hash = hash * 59 + this.UnmetSharedTemplate.GetHashCode();
                if (this.ThresholdMet != null)
                    hash = hash * 59 + this.ThresholdMet.GetHashCode();
                if (this.WebsiteUrl != null)
                    hash = hash * 59 + this.WebsiteUrl.GetHashCode();
                if (this.TrackingCode != null)
                    hash = hash * 59 + this.TrackingCode.GetHashCode();
                if (this.CustomCss != null)
                    hash = hash * 59 + this.CustomCss.GetHashCode();
                if (this.HideBranding != null)
                    hash = hash * 59 + this.HideBranding.GetHashCode();
                if (this.TotalCount != null)
                    hash = hash * 59 + this.TotalCount.GetHashCode();
                return hash;
            }
        }
    }

}
