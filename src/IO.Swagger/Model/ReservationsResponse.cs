/* 
 * Waitlisted API
 *
 * Waitlisted API
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ReservationsResponse
    /// </summary>
    [DataContract]
    public partial class ReservationsResponse :  IEquatable<ReservationsResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReservationsResponse" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="Uuid">Uuid.</param>
        /// <param name="Email">Email.</param>
        /// <param name="Affiliate">Affiliate.</param>
        /// <param name="Name">Name.</param>
        /// <param name="ReferredCount">ReferredCount.</param>
        /// <param name="Position">Position.</param>
        /// <param name="TotalCount">TotalCount.</param>
        /// <param name="ActivatedAt">ActivatedAt.</param>
        /// <param name="CreatedAt">CreatedAt.</param>
        public ReservationsResponse(string Id = null, string Uuid = null, string Email = null, string Affiliate = null, string Name = null, int? ReferredCount = null, int? Position = null, int? TotalCount = null, DateTime? ActivatedAt = null, DateTime? CreatedAt = null)
        {
            this.Id = Id;
            this.Uuid = Uuid;
            this.Email = Email;
            this.Affiliate = Affiliate;
            this.Name = Name;
            this.ReferredCount = ReferredCount;
            this.Position = Position;
            this.TotalCount = TotalCount;
            this.ActivatedAt = ActivatedAt;
            this.CreatedAt = CreatedAt;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }
        /// <summary>
        /// Gets or Sets Uuid
        /// </summary>
        [DataMember(Name="uuid", EmitDefaultValue=false)]
        public string Uuid { get; set; }
        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }
        /// <summary>
        /// Gets or Sets Affiliate
        /// </summary>
        [DataMember(Name="affiliate", EmitDefaultValue=false)]
        public string Affiliate { get; set; }
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }
        /// <summary>
        /// Gets or Sets ReferredCount
        /// </summary>
        [DataMember(Name="referred_count", EmitDefaultValue=false)]
        public int? ReferredCount { get; set; }
        /// <summary>
        /// Gets or Sets Position
        /// </summary>
        [DataMember(Name="position", EmitDefaultValue=false)]
        public int? Position { get; set; }
        /// <summary>
        /// Gets or Sets TotalCount
        /// </summary>
        [DataMember(Name="total_count", EmitDefaultValue=false)]
        public int? TotalCount { get; set; }
        /// <summary>
        /// Gets or Sets ActivatedAt
        /// </summary>
        [DataMember(Name="activated_at", EmitDefaultValue=false)]
        public DateTime? ActivatedAt { get; set; }
        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime? CreatedAt { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ReservationsResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Affiliate: ").Append(Affiliate).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ReferredCount: ").Append(ReferredCount).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("  TotalCount: ").Append(TotalCount).Append("\n");
            sb.Append("  ActivatedAt: ").Append(ActivatedAt).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ReservationsResponse);
        }

        /// <summary>
        /// Returns true if ReservationsResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of ReservationsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReservationsResponse other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Uuid == other.Uuid ||
                    this.Uuid != null &&
                    this.Uuid.Equals(other.Uuid)
                ) && 
                (
                    this.Email == other.Email ||
                    this.Email != null &&
                    this.Email.Equals(other.Email)
                ) && 
                (
                    this.Affiliate == other.Affiliate ||
                    this.Affiliate != null &&
                    this.Affiliate.Equals(other.Affiliate)
                ) && 
                (
                    this.Name == other.Name ||
                    this.Name != null &&
                    this.Name.Equals(other.Name)
                ) && 
                (
                    this.ReferredCount == other.ReferredCount ||
                    this.ReferredCount != null &&
                    this.ReferredCount.Equals(other.ReferredCount)
                ) && 
                (
                    this.Position == other.Position ||
                    this.Position != null &&
                    this.Position.Equals(other.Position)
                ) && 
                (
                    this.TotalCount == other.TotalCount ||
                    this.TotalCount != null &&
                    this.TotalCount.Equals(other.TotalCount)
                ) && 
                (
                    this.ActivatedAt == other.ActivatedAt ||
                    this.ActivatedAt != null &&
                    this.ActivatedAt.Equals(other.ActivatedAt)
                ) && 
                (
                    this.CreatedAt == other.CreatedAt ||
                    this.CreatedAt != null &&
                    this.CreatedAt.Equals(other.CreatedAt)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.Uuid != null)
                    hash = hash * 59 + this.Uuid.GetHashCode();
                if (this.Email != null)
                    hash = hash * 59 + this.Email.GetHashCode();
                if (this.Affiliate != null)
                    hash = hash * 59 + this.Affiliate.GetHashCode();
                if (this.Name != null)
                    hash = hash * 59 + this.Name.GetHashCode();
                if (this.ReferredCount != null)
                    hash = hash * 59 + this.ReferredCount.GetHashCode();
                if (this.Position != null)
                    hash = hash * 59 + this.Position.GetHashCode();
                if (this.TotalCount != null)
                    hash = hash * 59 + this.TotalCount.GetHashCode();
                if (this.ActivatedAt != null)
                    hash = hash * 59 + this.ActivatedAt.GetHashCode();
                if (this.CreatedAt != null)
                    hash = hash * 59 + this.CreatedAt.GetHashCode();
                return hash;
            }
        }
    }

}
